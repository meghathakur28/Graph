import java.util.*;
//weighted undirected graph
public class graph {
    static class Edges { 
        int weigh;
        int src;
        int des;
        Edges(int weigh,int src,int des)
        {
            this.weigh=weigh;
            this.src=src;
            this.des=des;
        }
    }
    public static void create(ArrayList<Edges> graph[])  // creating the graph
    {
        for(int i=0;i<graph.length;i++)
        {
            graph[i]=new ArrayList<Edges>();
        }
        graph[0].add(new Edges(2,0,2));
        graph[1].add(new Edges(10,1,2));
        graph[1].add(new Edges(0,1,3));
        graph[2].add(new Edges(2,2,0));
        graph[2].add(new Edges(10,2,1));
        graph[2].add(new Edges(-1,2,3));//weigh can be negative as well as positive
        graph[3].add(new Edges(0,3,1));
        graph[3].add(new Edges(-1,3,2));
    }
    public static void main(String[] args)
    {
        int V=4;
        int E=4;
        ArrayList<Edges> graph[] = new ArrayList[V];
        create(graph);
        for(int i=0;i<graph[2].size();i++)
        {
            Edges e = graph[2].get(i);
            System.out.println("weigh from "+e.src+" to "+e.des+" is: "+e.weigh);
        }
        System.out.println("");
        for(int i=0;i<graph[1].size();i++)
        {
            Edges e = graph[1].get(i);
            System.out.println("weigh from "+e.src+" to "+e.des+" is: "+e.weigh);
        }
        System.out.println("");
        for(int i=0;i<graph[0].size();i++)
        {
            Edges e = graph[0].get(i);
            System.out.println("weigh from "+e.src+" to "+e.des+" is: "+e.weigh);
        }
        System.out.println("");
        for(int i=0;i<graph[3].size();i++)
        {
            Edges e = graph[3].get(i);
            System.out.println("weigh from "+e.src+" to "+e.des+" is: "+e.weigh);
        }
    }
    
}
